{"version":3,"file":"static/js/993.d28ae0e5.chunk.js","mappings":"uRAwEA,EA9DoB,WAClB,IAAQA,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAoCE,EAAAA,EAAAA,UAAS,CAC3CC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAmBC,EAAnB,KAKA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACdN,GAAc,SAAAO,GAAS,yBAAUA,GAAV,cAAsBV,EAAOS,GAA7B,GACxB,EAoBD,OACE,kBAAME,UAAU,gBAAgBC,SAZb,SAAAC,GACnBA,EAAEC,iBACEjB,EAAKkB,MAAK,SAAAC,GAAO,OAAIA,EAAQf,SAAWC,EAAWD,MAAlC,IACnBgB,MAAM,cAAD,OAAef,EAAWD,OAA1B,6BAGPI,EAAWH,GAZXC,EAAc,CACZH,KAAM,GACNC,OAAQ,KAaX,EAGC,WACE,kBACEiB,KAAK,OACLlB,KAAK,OACLmB,YAAY,OACZV,MAAOP,EAAWF,KAClBoB,SAAUd,EACVe,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBACEL,KAAK,MACLlB,KAAK,SACLmB,YAAY,QACZV,MAAOP,EAAWD,OAClBmB,SAAUd,EACVe,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAGV,mBAAQZ,UAAU,SAASO,KAAK,SAAhC,2BAKL,E,oBC9CD,EAjBe,WACb,IAAMM,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYf,KAAtB,IAC/BkB,GAAWC,EAAAA,EAAAA,MACjB,OACE,4BACE,kBACE5B,KAAK,SACLS,MAAOe,EACPL,YAAY,iCACZC,SAAU,SAAAP,GACRc,GAASE,EAAAA,EAAAA,IAAkBhB,EAAEL,cAAcC,OAC5C,KAIR,E,UCyBD,MAvCA,WACE,IAAQZ,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAwCiC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,WAElBR,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYf,KAAtB,IAYrC,OACE,eAAIE,UAAU,WAAd,SACGd,GAZuB,WAC1B,GAAKA,EAML,OAL8B,OAAIA,GAAMoC,QACtC,SAAAjB,GAAO,OACLA,EAAQhB,KAAKkC,cAAcC,SAASX,EAAYU,gBAChDlB,EAAQf,OAAOkC,SAASX,EAFnB,GAKV,CAKKY,GAAsBC,KAAI,YAA2B,IAAxBrC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQqC,EAAS,EAATA,GACzC,OACE,gBAAa3B,UAAU,iBAAvB,WACE,yBACGX,EADH,MACYC,MAEZ,mBACEiB,KAAK,SACLqB,QAAS,kBAAMR,EAAcO,EAApB,EACTE,SAAUR,EAHZ,sBAJOM,EAaZ,KAGR,ECpBD,EAjBiB,WACf,IAAMG,GAAYhB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMgB,IAAV,IAEnC,OACE,8BACE,iBAAK/B,UAAWgC,EAAAA,EAAAA,eAAhB,WACE,wBAAKF,EAAUG,KAAK5C,QACpB,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,QAIP,C","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'services/contactsAPI';\n\nimport '../App.module.css';\nimport './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [formFields, setFormFields] = useState({\n    name: '',\n    number: '',\n  });\n\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setFormFields(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const reset = () => {\n    setFormFields({\n      name: '',\n      number: '',\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (data.some(contact => contact.number === formFields.number)) {\n      alert(`This phone ${formFields.number} is already in contacts`);\n      return;\n    }\n    addContact(formFields);\n\n    reset();\n  };\n\n  return (\n    <form className=\"contacts-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        value={formFields.name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <input\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Phone\"\n        value={formFields.number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button className=\"button\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\n\nimport { changeFilterValue } from '../../redux/contactsSlice';\n\nimport './Filter.module.css';\n\nconst Filter = () => {\n  const filterValue = useSelector(state => state.filterValue.value);\n  const dispatch = useDispatch();\n  return (\n    <label>\n      <input\n        name=\"filter\"\n        value={filterValue}\n        placeholder=\"Find contacts by name or phone\"\n        onChange={e => {\n          dispatch(changeFilterValue(e.currentTarget.value));\n        }}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import * as React from 'react';\nimport { useSelector } from 'react-redux/es/exports';\n\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'services/contactsAPI';\n\nfunction ContactList() {\n  const { data } = useGetContactsQuery();\n  const [deleteContact, { isFetching }] = useDeleteContactMutation();\n\n  const filterValue = useSelector(state => state.filterValue.value);\n\n  const getFilteredContacts = () => {\n    if (!data) return;\n    const filteredContactsArray = [...data].filter(\n      contact =>\n        contact.name.toLowerCase().includes(filterValue.toLowerCase()) ||\n        contact.number.includes(filterValue)\n    );\n    return filteredContactsArray;\n  };\n\n  return (\n    <ul className=\"contacts\">\n      {data &&\n        getFilteredContacts().map(({ name, number, id }) => {\n          return (\n            <li key={id} className=\"contacts__item\">\n              <p>\n                {name} : {number}\n              </p>\n              <button\n                type=\"button\"\n                onClick={() => deleteContact(id)}\n                disabled={isFetching}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport s from '../../components/App.module.css';\nimport '../../components/App.module.css';\n\nconst Contacts = () => {\n  const tokenAuth = useSelector(state => state.auth);\n\n  return (\n    <section>\n      <div className={s.userContactDiv}>\n        <h1>{tokenAuth.user.name}</h1>\n        <h2>Phonebook</h2>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["data","useGetContactsQuery","useState","name","number","formFields","setFormFields","useAddContactMutation","addContact","handleChange","event","currentTarget","value","prevState","className","onSubmit","e","preventDefault","some","contact","alert","type","placeholder","onChange","pattern","title","required","filterValue","useSelector","state","dispatch","useDispatch","changeFilterValue","useDeleteContactMutation","deleteContact","isFetching","filter","toLowerCase","includes","getFilteredContacts","map","id","onClick","disabled","tokenAuth","auth","s","user"],"sourceRoot":""}